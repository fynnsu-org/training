# SPDX-License-Identifier: Apache-2.0

name: E2E (NVIDIA L40S x4) (python 3.11)

on:
  workflow_dispatch:
    inputs:
      pr_or_branch:
        description: 'pull request number or branch name'
        required: true
        default: 'main'

env:
  TMPDIR: /home/tmp

jobs:
  e2e-large-test:
    runs-on:
      - runs-on=${{ github.run_id }}
      - family=g6e.12xlarge
      - region=us-east-1
      - ami=ami-0d5fc5198e1fd429a

    permissions:
      pull-requests: write

    steps:
      - name: "Harden Runner"
        # v2.10.1
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        with:
          egress-policy: audit

      - name: Checkout instructlab/training
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "instructlab/training"
          path: "training"
          # https://github.com/actions/checkout/issues/249
          fetch-depth: 0

      - name: Run e2e tests
        uses: ./training/.github/actions/run-e2e
        with:
          python-version: 3.11
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          hf-token: ${{ secrets.HF_TOKEN }}
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          son-of-jeeves-discord-webhook: ${{ secrets.SON_OF_JEEVES_DISCORD_WEBHOOK }}

  loss-graphs:
    needs:
      - e2e-large-test
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: "Harden Runner"
        # v2.10.1
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        with:
          egress-policy: audit

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Download loss data Phase 1
        id: phase-1-download-logs
        uses: actions/download-artifact@v4
        with:
          name: phase-1-training-log.jsonl
          path: downloaded-data

      - name: Download loss data Phase 2
        id: phase-2-download-logs
        uses: actions/download-artifact@v4
        with:
          name: phase-2-training-log.jsonl
          path: downloaded-data

      - name: Checkout instructlab/training
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: "instructlab/training"
          path: "training"
          fetch-depth: 0

      - name: Install dependencies
        working-directory: ./training
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt -c constraints-dev.txt

      - name: Try to upload Phase 1 to s3
        id: phase-1-upload-s3
        continue-on-error: true
        run: |
          python training/scripts/create-loss-graph.py  \
            --log-file "${{ steps.phase-1-download-logs.outputs.download-path }}/phase-1-training-log.jsonl" \
            --output-file "./phase-1-test.md" \
            --phase "1" \
            --aws-region "${{ vars.AWS_REGION }}" \
            --bucket-name "${{ vars.AWS_S3_LOSS_GRAPHS_BUCKET_NAME }}" \
            --base-branch "${GITHUB_REF##*/}" \
            --head-sha "${{ github.sha }}" \
            --pr-number "${{ github.event.number }}" \
            --origin-repository "${{ github.repository }}"

      - name: Try to upload Phase 2 to s3
        id: phase-2-upload-s3
        continue-on-error: true
        run: |
          python training/scripts/create-loss-graph.py  \
            --log-file "${{ steps.phase-2-download-logs.outputs.download-path }}/phase-2-training-log.jsonl" \
            --output-file "./phase-2-test.md" \
            --phase "2" \
            --aws-region "${{ vars.AWS_REGION }}" \
            --bucket-name "${{ vars.AWS_S3_LOSS_GRAPHS_BUCKET_NAME }}" \
            --base-branch "${GITHUB_REF##*/}" \
            --head-sha "${{ github.sha }}" \
            --pr-number "${{ github.event.number }}" \
            --origin-repository "${{ github.repository }}"

      - name: Check Phase 1 S3 upload status for success
        if: steps.phase-1-upload-s3.outcome == 'success'
        run: |
          echo "Uploaded Phase 1 loss graph to S3."
          cat ./phase-1-test.md >> "${GITHUB_STEP_SUMMARY}"

      - name: Check Phase 2 S3 upload status for success
        if: steps.phase-2-upload-s3.outcome == 'success'
        run: |
          echo "Uploaded Phase 2 loss graph to S3."
          cat ./phase-2-test.md >> "${GITHUB_STEP_SUMMARY}"

      - name: Check Phase 1 S3 upload status for failure
        if: steps.phase-1-upload-s3.outcome == 'failure'
        run: |
          echo "::warning::Failed to upload Phase 1 loss graph to S3. This won't block the workflow, but you may want to investigate."
          echo "Loss graph upload failed" >> "${GITHUB_STEP_SUMMARY}"

      - name: Check Phase 2 S3 upload status for failure
        if: steps.phase-2-upload-s3.outcome == 'failure'
        run: |
          echo "::warning::Failed to upload Phase 2 loss graph to S3. This won't block the workflow, but you may want to investigate."
          echo "Loss graph upload failed" >> "${GITHUB_STEP_SUMMARY}"
